--
-- Created by IntelliJ IDEA.
-- User: Administrator
-- Date: 2017/4/8
-- Time: 8:10
-- To change this template use File | Settings | File Templates.
--

local patterns = {[[
listesc
福州福威镖局押镖任务列表：
任务序号  任务目的地               任务发布时间   任务状态 认领玩家
=============================================================================
16975     临安府江南钱庄                    510秒   已认领 gengfeng
16976     嘉兴钱庄                          510秒   已认领 akking
16977     归云庄太湖街                      510秒   待认领 0
16984     牙山小荒地                        353秒   待认领 0
16985     泉州当铺                          353秒   已完成 atomy
16986     嘉兴陆家庄大厅                    353秒   待认领 0
=============================================================================
使用命令【getesc 任务序号】来认领押镖任务。

getesc 34854
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到泉州当铺王福贵那里，他已经派了个伙计名叫令狐轩梅到泉州码头附近接你，把镖车送到他那里就行了。

gan che to west
西大街
你赶着镖车驶了过来。
镖车隆隆驶了过来。
>
gan che to west
镖车还没有跟上来呢,走慢点.

gan che to north
劫匪伸手一拦道：“想跑？没那么容易！”

你累了个半死，终于把镖运到了地头。

令狐轩梅对你说道：“终于到了！小兄弟辛苦了！”

围上来几个伙计将镖车拉了进去。

ask lin about finish
你向林震南打听有关『finish』的消息。
你一共被奖励了：
三百零四点经验；
一百十点潜能；
六十七点江湖声望。
林震南吩咐了旁边的镖头几句，转头对你道：「辛苦了，有几两银子略表心意，已经吩咐人存入你的钱庄账户。」
林震南拍了拍撸啊的头，说道：「好孩子，乖。」
林震南说道：「小兄弟果然是栋梁之才！」

getesc 34853
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到苏州聚宝斋孙剥皮那里，他已经派了个伙计名叫樊柏慕到沧浪亭附近接你，把镖车送到他那里就行了。

你赶着镖车驶了过来。
镖车隆隆驶了过来。
> 你累了个半死，终于把镖运到了地头。

樊柏慕对你说道：“终于到了！小兄弟辛苦了！”

围上来几个伙计将镖车拉了进去。

getesc 34882
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到泉州当铺王福贵那里，他已经派了个伙计名叫包云永到南门附近接你，把镖车送到他那里就行了。

gan che to northwest
这个方向过不去。

listesc
福州福威镖局押镖任务列表：
任务序号  任务目的地               任务发布时间   任务状态 认领玩家
=============================================================================
34882     泉州当铺                          471秒   已完成 luar
34883     镇江飞龙镖局                      471秒   已认领 crafting
34884     嘉兴陆家庄大厅                    471秒   待认领 0
34891     岳王墓墓前广场                    154秒   待认领 0
34892     泉州当铺                          154秒   待认领 0
34893     牙山小荒地                        154秒   待认领 0
=============================================================================
使用命令【getesc 任务序号】来认领押镖任务。

getesc 34893
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到牙山小荒地黄毛鬼那里，他已经派了个伙计名叫樊慕郎到破屋附近接你，把镖车送到他那里就行了。

劫匪突然从暗处跳了出来，阴笑道：“红货和人命都留下来吧！。”

getesc 34901
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到镇江飞龙镖局张经那里，他已经派了个伙计名叫余坚七到土路附近接你，把镖车送到他那里就行了。

劫匪伸手一拦道：“想跑？没那么容易！”

劫匪趁你不注意，推着镖车就跑，你赶紧追了上去。

你赶着镖车驶了过来。
镖车隆隆驶了过来。
> 你累了个半死，终于把镖运到了地头。

余坚七对你说道：“终于到了！小兄弟辛苦了！”

围上来几个伙计将镖车拉了进去。
劫匪突然从暗处跳了出来，阴笑道：“红货和人命都留下来吧！。”
你在攻击中不断积蓄攻势。(气势：4%)
劫匪正盯著你的一举一动，随时准备发动攻势。

getesc 34922
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到岳王墓墓前广场包打听那里，他已经派了个伙计名叫侯征永到墓边小道附近接你，把镖车送到他那里就行了。

getesc 34916
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到归云庄太湖街商人那里，他已经派了个伙计名叫阮明到太湖街附近接你，把镖车送到他那里就行了。

劫匪叫道：点子扎手，扯呼！

劫匪个起纵遁入暗里不见了。

> 劫匪突然从暗处跳了出来，阴笑道：“红货和人命都留下来吧！。”

忽然一阵刺骨的奇寒袭来，你中的星宿毒掌毒发作了！

gan che to northwest
你还是先把对手解决了再说吧！

斜刺里冲出来小偷,猛地对你痛下杀手！
趟子手大呼：有人劫镖阿，快护镖，快快！

gan che to east
你现在正忙着哩。

getesc 34923
你所领的任务在任务列表中并不存在。
认领任务失败，请选择其他任务。

getesc 34934
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到嘉兴陆家庄大厅陆立鼎那里，他已经派了个伙计名叫左少康到大厅附近接你，把镖车送到他那里就行了。

getesc 47912
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到临安府江南钱庄金乞儿那里，他已经派了个伙计名叫闻火涛到杂货铺附近接你，把镖车送到他那里就行了。

getesc 47955
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到嘉兴陆家庄大厅陆立鼎那里，他已经派了个伙计名叫曹琨到大厅附近接你，把镖车送到他那里就行了。

getesc 47997
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到南昌飞虎镖局楚大业那里，他已经派了个伙计名叫安司卿到城中心附近接你，把镖车送到他那里就行了。

getesc 48026
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到南昌飞虎镖局楚大业那里，他已经派了个伙计名叫余捷到偃月楼附近接你，把镖车送到他那里就行了。

    「店铺伙计」阮威龙(Ruan weilong)

getesc 48027
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到岳王墓墓前广场包打听那里，他已经派了个伙计名叫阮威龙到墓前广场附近接你，把镖车送到他那里就行了。

getesc 48069
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到镇江飞龙镖局张经那里，他已经派了个伙计名叫呼延波亦到北大街附近接你，把镖车送到他那里就行了。

getesc 48118
林震南点了点头。
几个伙计将镖推了出来。
撸啊把这批红货送到泉州当铺王福贵那里，他已经派了个伙计名叫高玄生到山路附近接你，把镖车送到他那里就行了。

你还是先把对手解决了再说吧！

zhao
一个伙计挖着鼻屎走了出来，道：你找我啥事？

ask tam about yao
你向唐进打听有关『yao』的消息。
唐进说道：你在说外国话吧？我不会，你最好带个翻译来。

ask tam about yao
你向唐进打听有关『yao』的消息。
唐进把一包财物砸向你，一转眼不见了。

getesc 48916
你上次运镖太辛苦了，下去休息休息吧。
>
getesc 48917
你正忙着呢！
>

xian
你按照林震南的指示，打开密信……原来要你到以下地方找(zhao/zhaoxun)到潜逃的伙计并要(yao)回其席卷的财物！
你的客户端不支持MXP,请直接打开链接查看图片。
请注意，忽略验证码中的红色文字。
http://pkuxkx.net/antirobot/robot.php?filename=1492599526849159

卷走林震南财物的伙计 佰赏庆(Toes)

（只听见「啪」地一声，你手中的青锋剑已经断为两截！）

（宋悦蓓的钢杖和你的青锋剑重重交击在一起，发出「铛」地一声。）

]]}

local helper = require "pkuxkx.helper"
local FSM = require "pkuxkx.FSM"
local travel = require "pkuxkx.travel"
local status = require "pkuxkx.status"

local define_hubiao = function()
  local prototype = FSM.inheritedMeta()

  local States = {
    stop = "stop",  -- 终止状态，与jobs模块整合，提供waitDone触发
    prepare = "prepare",  -- 准备任务，查看任务
    prefetch = "prefetch",  -- 预先前往查找目的地
    transfer = "transfer",  -- 运输中
    lost = "lost",  -- 迷路中（很大可能被强盗推至相邻房间）
    submit = "submit",  -- 提交
    mixin = "mixin",  -- 密信
    find = "find",  -- 寻找，当到达目的地而无法找到伙计时
  }
  local Events = {
    STOP = "stop",  -- 任何状态下停止
    START = "start",  -- stop -> prepare
    NO_JOB_AVAILABLE = "no_job_available",  -- prepare -> stop
    ACCEPT_SUCCESS = "accept_success",  -- prepare -> prefetch
    ACCEPT_FAIL = "accept_fail",  -- prepare -> prepare
    NEXT_PREFETCH = "next_prefetch",  -- prefetch -> prefetch
    PREFETCH_SUCCESS = "prefetch_success",  -- prefetch -> transfer
    TRANSFER_STEP = "transfer_step",  -- transfer -> step
    STEP_SUCCESS = "step_success",  -- 行走一步成功 transfer -> transfer
    STEP_FAIL = "step_fail",  -- 行走一步失败 transfer -> transfer
    GET_LOST = "get_lost",  -- 迷路 transfer -> lost
    RELOCATED = "relocated",  -- 重定位成功 lost -> transfer
    TRANSFER_SUCCESS = "transfer_success",  -- 运输成功 transfer -> submit
    MIXIN_FOUND = "mixin_found",  -- 发现密信 submit -> mixin
  }
  local REGEXP = {
    ALIAS_START = "^hubiao\\s+start\\s*$",
    ALIAS_STOP = "^hubiao\\s+stop\\s*$",
    ALIAS_DEBUG = "^hubiao\\s+debug\\s+(on|off)\\s*$",
    ALIAS_MIXIN = "^hubiao\\s+mixin\\s+(.*?)\\s*$",
    JOB_INFO = "^(\\d+)\\s+(.*?)\\s+(\\d+)秒\\s+(.*?)\\s+(.*)$",
    ACCEPT_INFO = "^.*把这批红货送到(.*?)那里，他已经派了个伙计名叫(.*?)到(.*?)附近接你，把镖车送到他那里就行了。$",
    ACCEPT_FAIL = "^[ >]*认领任务失败，请选择其他任务。$",
    TRANSFER_SUCCESS = "^[ >]*你累了个半死，终于把镖运到了地头。$",
    ROBBER_MOVE = "^[ >]*劫匪趁你不注意，推着镖车就跑，你赶紧追了上去。$",
    TRANSFER_BUSY = "^[ >]*(劫匪伸手一拦道：“想跑？没那么容易！”|你还是先把对手解决了再说吧！|你现在正忙着哩。|镖车还没有跟上来呢,走慢点.*)$",
    STEP_SUCCESS = "^[ >]*你赶着镖车驶了过来。$",
    REWARDED = "^[ >]*你一共被奖励了：$",
    -- todo
    MIXIN_DESC = "^[ >]*这是一张林震南给你的密信，需要用特殊的药水才能显形\\(xian\\)。$",
    MIXIN_NPC_DISPLAY = "^[ >]*\\s*卷走.*?财物的伙计 .*?\\((.*?)\\)$",
    MIXIN_NPC_FOUND = "^[ >]*一个伙计挖着鼻屎走了出来，道：你找我啥事？$",
    MIXIN_YAO_SUCCESS = "^[ >]*.*把一包财物砸向你，一转眼不见了。$",
  }

  -- 福州福威镖局
  local StartRoomId = 26
  local PrefetchDepth = 5

  function prototype:FSM()
    local obj = FSM:new()
    setmetatable(obj, self or prototype)
    obj:postConstruct()
    return obj
  end

  function prototype:postConstruct()
    self:initStates()
    self:initTransitions()
    self:initTriggers()
    self:initAliases()
    self:setState(States.stop)
    self.maxRound = 8
    self.round = 0

    -- precondition
    self.precondition = {
      jing = 0.96,
      qi = 0.96,
      jingli = 1,
      neili = 1.8
    }
    -- special variable
    self.playerName = "撸啊"
    self.playerId = "luar"
  end

  function prototype:disableAllTriggers()

  end

  function prototype:initStates()
    self:addState {
      state = States.stop,
      enter = function()
        self:disableAllTriggers()
        self:removeTriggerGroups("hubiao_prefetch_traverse", "hubiao_transfer")
        SendNoEcho("set jobs done")  -- 为jobs提供结束触发
      end,
      exit = function() end
    }
    self:addState {
      state = States.prepare,
      enter = function()
        helper.enableTriggerGroups("hubiao_info_start", "hubiao_accept_start")
      end,
      exit = function()
        helper.disableTriggerGroups("hubiao_info_start", "hubiao_info_done",
          "hubiao_accept_start", "hubiao_accept_done")
      end
    }
    self:addState {
      state = States.prefetch,
      enter = function() end,
      exit = function() end
    }
    self:addState {
      state = States.transfer,
      enter = function()
        helper.enableTriggerGroups("hubiao_step_start", "hubiao_transfer")
      end,
      exit = function()
        helper.disableTriggerGroups("hubiao_step_start", "hubiao_step_done", "hubiao_transfer")
      end
    }
    self:addState {
      state = States.submit,
      enter = function()
        helper.enableTriggerGroups("hubiao_submit_start", "hubiao_mixin_start")
      end,
      exit = function()
        helper.enableTriggerGroups("hubiao_submit_start", "hubiao_submit_done",
          "hubiao_mixin_start", "hubiao_mixin_done")
      end
    }
    self:addState {
      state = States.lost,
      enter = function() end,
      exit = function() end
    }
    self:addState {
      state = States.mixin,
      enter = function() end,
      exit = function() end
    }
  end

  function prototype:initTransitions()
    -- transition from state<stop>
    self:addTransition {
      oldState = States.stop,
      newState = States.prepare,
      event = Events.START,
      action = function()
        return self:doPrepare()
      end
    }
    self:addTransitionToStop(States.stop)
    -- transition from state<prepare>
    self:addTransition {
      oldState = States.prepare,
      newState = States.prepare,
      event = Events.ACCEPT_FAIL,
      action = function()
        self:debug("等待3秒后重新接任务")
        wait.time(3)
        return self:doPrepare()
      end
    }
    self:addTransition {
      oldState = States.prepare,
      newState = States.prefetch,
      event = Events.ACCEPT_SUCCESS,
      action = function()
        self:debug("等待3秒后开始预取")
        wait.time(3)
        self.transferVisitedRoomIds = {}
        return self:doConfirmSearhRooms()
      end
    }
    self:addTransition {
      oldState = States.prepare,
      newState = States.stop,
      event = Events.NO_JOB_AVAILABLE,
      action = function()
        self:debug("目前无可用任务，等待2秒后结束")
        wait.time(2)
        return self:fire(Events.STOP)
      end
    }
    self:addTransitionToStop(States.prepare)
    -- transition from state<prefetch>
    self:addTransition {
      oldState = States.prefetch,
      newState = States.prefetch,
      event = Events.NEXT_PREFETCH,
      action = function()
        return self:doPrefetch()
      end
    }
    self:addTransition {
      oldState = States.prefetch,
      newState = States.transfer,
      event = Events.PREFETCH_SUCCESS,
      action = function()
        -- back to start
        travel:walkto(StartRoomId)
        travel:waitUntilArrived()
        self:debug("等待2秒后进行运送")
        wait.time(2)
        return self:doPrepareTransfer()
      end
    }
    self:addTransitionToStop(States.prefetch)
    -- transition from state<transfer>
    self:addTransition {
      oldState = States.transfer,
      newState = States.transfer,
      event = Events.STEP_SUCCESS,
      action = function()
        -- 设置运输房间编号
        if self.currStep then
          self.transferRoomId = self.currStep.endid
        end
        -- 设置下一步的路径为当前路径
        if #(self.transferPlan) > 0 then
          self.currStep = table.remove(self.transferPlan)
          return self:doStep()
        else
          ColourNote("yellow", "", "已走完全部路径")
          wait.time(4)
          helper.checkUntilNotBusy()
          if self.transferSuccess then
            self:debug("镖已送到，返回提交任务")
            return self:doSubmit()
          else
            ColourNote("red", "", "没有找到伙计，任务失败！")
            return self:doCancel()
          end
        end
      end
    }
    self:addTransition {
      oldState = States.transfer,
      newState = States.transfer,
      event = Events.STEP_FAIL,
      action = function()
        -- 失败时不更新当前路径，重试
        return self:doStep()
      end
    }
    self:addTransition {
      oldState = States.transfer,
      newState = States.lost,
      event = Events.GET_LOST,
      action = function()
        return self:doRelocate()
      end
    }
    self:addTransition {
      oldState = States.transfer,
      newState = States.submit,
      event = Events.TRANSFER_SUCCESS,
      action = function()
        return self:doSubmit()
      end
    }
    self:addTransitionToStop(States.transfer)
    -- transition from state<lost>
    self:addTransition {
      oldState = States.lost,
      newState = States.transfer,
      event = Events.RELOCATED,
      action = function()
        return self:doPrepareTransfer()
      end
    }
    self:addTransitionToStop(States.lost)
    -- transition from state<submit>
    self:addTransition {
      oldState = States.submit,
      newState = States.mixin,
      event = Events.MIXIN_FOUND,
      action = function()
        ColourNote("yellow", "", "发现密信，请手动输入密信地点hubiao mixin <地点>")
      end
    }
    self:addTransitionToStop(States.submit)
    -- transition from state<mixin>
    self:addTransitionToStop(States.mixin)
  end

  function prototype:initTriggers()
    helper.removeTriggerGroups(
      "hubiao_info_start", "hubiao_info_done",
      "hubiao_accept_start", "hubiao_accept_done",
      "hubiao_step_start", "hubiao_step_done",
      "hubiao_submit_start", "hubiao_submit_done",
      "hubiao_mixin_start", "hubiao_mixin_done",
      "hubiao_transfer")
    -- info
    helper.addTriggerSettingsPair {
      group = "hubiao",
      start = "info_start",
      done = "info_done"
    }
    helper.addTrigger {
      group = "hubiao_info_done",
      regexp = REGEXP.JOB_INFO,
      response = function(name, line, wildcards)
        self:debug("JOB_INFO triggered")
        local jobId = wildcards[1]
        local jobLocation = wildcards[2]
        local jobRemainedTime = wildcards[3]
        local jobStatus = wildcards[4]
        local jobPlayer = wildcards[5]
        if jobStatus == "待认领" then
          table.insert(self.jobs, {id = jobId, location = jobLocation})
        end
      end
    }
    -- accept
    helper.addTriggerSettingsPair {
      group = "hubiao",
      start = "accept_start",
      done = "accept_done"
    }
    helper.addTrigger {
      group = "hubiao_accept_done",
      regexp = REGEXP.ACCEPT_FAIL,
      response = function()
        self:debug("ACCEPT_FAIL triggered")
      end
    }
    helper.addTrigger {
      group = "hubiao_accept_done",
      regexp = REGEXP.ACCEPT_INFO,
      response = function(name, line, wildcards)
        self.acceptSuccess = true
        self.employer = wildcards[1]
        self.dudeName = wildcards[2]
        self.searchRoomName = wildcards[3]
      end
    }
    -- step
    helper.addTriggerSettingsPair {
      group = "hubiao",
      start = "step_start",
      done = "step_done"
    }
    -- 行走成功
    helper.addTrigger {
      group = "hubiao_step_done",
      regexp = REGEXP.STEP_SUCCESS,
      response = function()
        self.stepSuccess = true
      end
    }
    -- submit
    helper.addTriggerSettingsPair {
      group = "hubiao",
      start = "submit_start",
      done = "submit_done"
    }
    helper.addTrigger {
      group = "hubiao_submit_done",
      regexp = REGEXP.REWARDED,
      response = function()
        self.submitSuccess = true
        self:debug("任务完成，获得奖励")
      end
    }
    -- mixin
    helper.addTriggerSettingsPair {
      group = "hubiao",
      start = "mixin_start",
      done = "mixin_done"
    }
    helper.addTrigger {
      group = "hubiao_mixin_done",
      regexp = REGEXP.MIXIN_DESC,
      response = function()
        self.findMixin = true
      end
    }
    -- transfer
    helper.addTrigger {
      group = "hubiao_transfer",
      regexp = REGEXP.TRANSFER_SUCCESS,
      response = function()
        self.transferSuccess = true
      end
    }
    helper.addTrigger {
      group = "hubiao_transfer",
      regexp = REGEXP.ROBBER_MOVE,
      response = function()
        self.transferLost = true
      end
    }
  end

  function prototype:initAliases()
    helper.removeAliasGroups("hubiao")
    helper.addAlias {
      group = "hubiao",
      regexp = REGEXP.ALIAS_START,
      response = function()
        return self:fire(Events.START)
      end
    }
    helper.addAlias {
      group = "hubiao",
      regexp = REGEXP.ALIAS_STOP,
      response = function()
        return self:fire(Events.STOP)
      end
    }
    helper.addAlias {
      group = "hubiao",
      regexp = REGEXP.ALIAS_DEBUG,
      response = function(name, line, wildcards)
        local cmd = wildcards[1]
        if cmd == "on" then
          self:debugOn()
        else
          self:debugOff()
        end
      end
    }
    helper.addAlias {
      group = "hubiao",
      regexp = REGEXP.ALIAS_MIXIN,
      response = function(name, line, wildcards)
        local location = wildcards[1]
        local rooms = travel:getMatchedRooms {
          fullname = location
        }
        if #(rooms) == 0 then
          ColourNote("red", "", "房间查询不到或不可达")
        else
          self.mixinRoomId = rooms[1].id
          travel:walkto(self.mixinRoomId)
          travel:waitUntilArrived()
          self:debug("等待2秒后开始执行密信任务")
          wait.time(2)
          while true do
            SendNoEcho("zhao")
            local line = wait.regexp(REGEXP.MIXIN_NPC_FOUND, 5)
            if line then break end
          end

          self.mixinNpcId = nil
          helper.addOneShotTrigger {
            group = "hubiao_mixin_one_shot",
            regexp = REGEXP.MIXIN_NPC_DISPLAY,
            response = function(name, line, wildcards)
              self.mixinNpcId = string.lower(wildcards[1])
            end
          }
          travel:lookUntilNotBusy()
          helper.removeTriggerGroups("hubiao_mixin_one_shot")
          while true do
            SendNoEcho("ask " .. self.mixinNpcId .. " about yao")
            local line = wait.regexp(REGEXP.MIXIN_YAO_SUCCESS, 5)
            if line then break end
          end
          self:debug("获得财物，返回")
          wait.time(2)
          helper.checkUntilNotBusy()
          travel:walkto(StartRoomId)
          travel:waitUntilArrived()
          helper.checkUntilNotBusy()
          SendNoEcho("give cai wu to lin")
          return self:fire(Events.STOP)
        end
      end
    }
  end

  function prototype:addTransitionToStop(fromState)
    self:addTransition {
      oldState = fromState,
      newState = States.stop,
      event = Events.STOP,
      action = function()
        print("停止 - 当前状态", self.currState)
      end
    }
  end

  function prototype:doGetJob()
    self.jobs = {}
    SendNoEcho("set hubiao info_start")
    SendNoEcho("listesc")
    SendNoEcho("set hubiao info_done")
    -- 等待两秒接任务
    wait.time(2)
    helper.assureNotBusy()
    if #(self.jobs) > 0 then
      return self:doAcceptJob()
    else
      return self:fire(Events.NO_JOB_AVAILABLE)
    end
  end

  function prototype:doAcceptJob()
    -- 设置当前任务
    local _, job = next(self.jobs)
    self.currJob = job
    self.acceptSuccess = false
    self.employer = nil
    self.dudeName = nil
    self.searchRoomName = nil
    SendNoEcho("set hubiao accept_start")
    SendNoEcho("getesc " .. self.currJob.id)
    SendNoEcho("set hubiao accept_done")
    helper.assureNotBusy()
    if self.acceptSuccess then
      return self:fire(Events.ACCEPT_SUCCESS)
    else
      return self:fire(Events.ACCEPT_FAIL)
    end
  end

  function prototype:doConfirmSearchRooms()
    local targets = travel:getMatchedRooms {
      fullname = self.currJob.location
    }
    if #(targets) == 0 then
      self:debug("运镖区域不可达，等待2秒后结束")
      wait.time(2)
      return self:doCancel()
    else
      local searchRooms = travel:getMatchedRooms {
        zone = targets[1].zone,
        name = self.searchRoomName,
      }
      if #(searchRooms) == 0 then
        self:debug("伙计所在地点不可达，无法执行预取，等待2秒后结束")
        wait.time(2)
        return self:doCancel()
      else
        self.searchedRoomIds = {}
        self.searchRooms = searchRooms
        return self:fire(Events.NEXT_PREFETCH)
      end
    end
  end

  function prototype:doPrefetch()
    if #(self.searchRooms) > 0 then
      local searchStartRoom = table.remove(self.searchRooms)
      if self.searchedRoomIds[searchStartRoom.id] then
        self:debug("房间已搜索过，跳过", searchStartRoom.id)
        return self:doPrefetch()
      else
        helper.assureNotBusy()
        travel:walkto(searchStartRoom.id)
        travel:waitUntilArrived()
        self:debug("到达搜索起始地点", searchStartRoom.id)
        self:debug("开始遍历寻找，深度为", PrefetchDepth)

        self.targetRoomId = nil
        helper.addTrigger {
          group = "hubiao_prefetch_traverse",
          regexp = self:dudeNameRegexp(),
          response = function()
            --找到伙计，则设置目标地点为当前房间编号
            self.targetRoomId = travel.traverseRoomId
          end
        }
        local onStep = function()
          return self.targetRoomId ~= nil  -- 停止条件，找到伙计
        end
        local onArrive = function()
          helper.removeTriggerGroups("hubiao_prefetch_traverse")
          if self.targetRoomId then
            self:debug("遍历结束，已经发现伙计，并确定目标房间：", self.targetRoomId)
            return self:fire(Events.PREFETCH_SUCCESS)
          else
            self:debug("没有发现伙计，尝试下一个地点")
            wait.time(1)
            return self:fire(Events.NEXT_PREFETCH)
          end
        end
        return travel:traverseNearby(PrefetchDepth, onStep, onArrive)
      end
    else
      self:debug("没有更多的搜索房间，预取失败，放弃该任务")
      wait.time(2)
      return self:doCancel()
    end
  end

  function prototype:dudeNameRegexp()
    return "^\\s*「店铺伙计」" .. self.dudeName .. "\\(.*?\\)$";
  end

  function prototype:doCancel()
    helper.assureNotBusy()
    travel:walkto(StartRoomId)
    travel:waitUntilArrived()
    helper.assureNotBusy()
    SendNoEcho("ask lin about fail")
    return self:fire(Events.STOP)
  end

  function prototype:doPrepareTransfer()
    local walkPlan = travel:generateWalkPlan(travel.currRoomId, self.targetRoomId)
    if not walkPlan then
      ColourNote("red", "", "计算直达路径失败，放弃该任务")
      return self:doCancel()
    end
    local traversePlan = travel:generateNearbyTraversePlan(self.targetRoomId, 2, true)
    if not traversePlan then
      ColourNote("red", "", "计算搜索路径失败，放弃该任务")
      return self:doCancel()
    end
    -- 合并两个行走计划栈，注意方向
    local transferPlan = {}
    for _, path in ipairs(traversePlan) do
      table.insert(transferPlan, path)
    end
    for _, path in ipairs(walkPlan) do
      table.insert(transferPlan, path)
    end
    self.transferRoomId = travel.currRoomId
    self.transferPlan = transferPlan
    self.transferLost = false
    self.findDude = false
    self.transferSuccess = false
    helper.removeTriggerGroups("hubiao_transfer")
    -- 找到伙计
    helper.addTrigger {
      group = "hubiao_transfer",
      regexp = self:dudeNameRegexp(),
      response = function()
        self.findDude = true
      end
    }
    return self:fire(Events.STEP_SUCCESS)
  end

  function prototype:doStep()
    self.stepSuccess = false
    SendNoEcho("set hubiao step_start")
    SendNoEcho("gan che to " .. helper.expandDirection(self.currStep))
    SendNoEcho("set hubiao step_done")
    wait.time(2)
    helper.checkUntilNotBusy()
    self:debug("行走一步，是否成功", self.stepSuccess)
    if self.transferSuccess then
      self:debug("运镖已成功，准备返回")
      wait.time(2)
      helper.checkUntilNotBusy()
      return self:fire(Events.TRANSFER_SUCCESS)
    elseif self.transferLost then
      return self:fire(Events.GET_LOST)
    elseif self.stepSuccess then
      return self:fire(Events.STEP_SUCCESS)
    else
      return self:fire(Events.STEP_FAIL)
    end
  end

  function prototype:doRelocate()
    wait.time(2)
    helper.checkUntilNotBusy()
    self:debug("重定位：获取最近房间并匹配")
    -- 获取最近一格房间
    local rooms1 = travel:getNearbyRooms(self.transferRoomId, 1)
    if self.DEBUG then
      local roomIds = helper.copyKeys(rooms1)
      print("最近1格房间列表：", table.concat(roomIds, ","))
      -- 匹配
    end
    self:debug("获取当前房间信息")
    travel:lookUntilNotBusy()
    self:debug(travel.currRoomName)
    self:debug(travel.currRoomDesc)
    self:debug(travel.currRoomExits)
    local matchedRooms = {}
    for _, room in pairs(rooms1) do
      if travel.currRoomName == room.name
        and travel.currRoomDesc == room.description
        and travel:checkExitsIdentical(travel.currRoomDesc, room.exits)
        and self.transferRoomId ~= room.id then
        table.insert(matchedRooms, room)
      end
    end
    if #(matchedRooms) > 1 then
      ColourNote("yellow", "", "存在多个房间匹配迷路房间，放弃该任务")
      travel:stop()
      return self:doCancel()
    elseif #(matchedRooms) == 1 then
      self:debug("已匹配唯一房间，重新计算运输计划")
      travel.currRoomId = matchedRooms[1].id
      travel:refreshRoomInfo()
      self.transferRoomId = travel.currRoomId
      return self:fire(Events.RELOCATED)
    else
      ColourNote("yellow", "", "无房间可匹配，放弃该任务")
      travel:stop()
      return self:doCancel()
    end
  end

  function prototype:doSubmit()
    travel:walkto(StartRoomId)
    travel:waitUntilArrived()
    self.submitSuccess = false
    SendNoEcho("set hubiao submit_start")
    SendNoEcho("ask lin about finish")
    SendNoEcho("set hubiao submit_done")
    wait.time(2)
    helper.checkUntilNotBusy()
    if self.submitSuccess then
      self.findMixin = false
      SendNoEcho("set hubiao mixin_start")
      SendNoEcho("look mixin")
      SendNoEcho("set hubiao mixin_done")
      wait.time(2)
      helper.checkUntilNotBusy()
      if self.findMixin then
        return self:fire(Events.MIXIN_FOUND)
      else
        self:debug("成功完成一轮任务")
        return self:fire(Events.STOP)
      end
    else
      self:debug("任务提交不成功，取消之")
      return self:doCancel()
    end
  end

  return prototype
end
return define_hubiao():FSM()

